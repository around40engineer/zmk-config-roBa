#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        muhennkann {
            bindings = <&to_layer_0 INT_MUHENKAN>;
            key-positions = <11 10>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };

        backSpace {
            bindings = <&kp BACKSPACE>;
            key-positions = <18 19>;
        };

        importSaitekika {
            bindings = <&kp LC(LA(O))>;
            key-positions = <7 8>;
        };

        MB3 {
            bindings = <&mkp MB3>;
            key-positions = <15 27>;
        };

        codeSeikei {
            bindings = <&kp LG(LA(L))>;
            key-positions = <19 20>;
        };

        shift+, {
            bindings = <&kp LS(COMMA)>;
            key-positions = <30 31>;
        };

        shift+. {
            bindings = <&kp LS(PERIOD)>;
            key-positions = <31 32>;
        };

        ramda {
            bindings = <&ramdafn>;
            key-positions = <5 6>;
        };

        comment {
            bindings = <&kp LG(SLASH)>;
            key-positions = <32 33>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };

        ramdafn: ramdafn {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_PARENTHESIS &kp RIGHT_PARENTHESIS &kp SPACE &kp EQUAL &kp GREATER_THAN &kp SPACE &kp LEFT_BRACE &kp RIGHT_BRACE &kp LEFT>;
            label = "RAMDAFN";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q                &kp W               &kp E          &kp R                       &kp T                                                                &kp Y        &kp U  &lt 5 I    &kp O    &kp P
&mt LEFT_SHIFT A     &kp S               &kp D          &kp F                       &kp G        &mkp MB1                        &kp BACKSPACE           &kp H        &kp J  &kp K      &kp L    &mt RIGHT_SHIFT SEMICOLON
&mt LEFT_COMMAND Z   &kp X               &kp C          &kp V                       &kp B        &mkp MB2                        &kp SQT                 &kp N        &kp M  &kp COMMA  &kp DOT  &mt RIGHT_COMMAND SLASH
&mt LEFT_ALT ESCAPE  &kp LA(LEFT_ARROW)  &kp LA(RIGHT)  &mt LEFT_CONTROL LC(SPACE)  &lt 2 SPACE  &lt_to_layer_0 3 LC(SPACE)      &lt_to_layer_0 6 SPACE  &lt 1 ENTER                             &kp RIGHT_ALT
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        FUNCTION {
            bindings = <
&trans                &trans     &trans  &kp LC(LS(R))  &kp LS(LG(T))                                      &kp LA(LEFT)       &kp LA(UP_ARROW)   &kp LA(DOWN_ARROW)  &kp LA(RIGHT)  &trans
&trans                &trans     &trans  &kp LS(LG(F))  &kp LC(G)      &kp LS(LA(UP_ARROW))        &trans  &kp LEFT           &kp UP_ARROW       &kp DOWN_ARROW      &kp RIGHT      &trans
&mt LEFT_SHIFT LG(Z)  &kp RG(X)  &trans  &trans         &kp LG(B)      &kp LS(LA(DOWN_ARROW))      &trans  &kp LG(LS(EQUAL))  &kp LS(LG(MINUS))  &trans              &trans         &trans
&trans                &trans     &trans  &trans         &trans         &trans                      &trans  &trans                                                                   &trans
            >;
        };

        NUM {
            bindings = <
&kp LS(LG(NUMBER_4))  &kp N7        &kp N8        &kp N9        &kp LS(LG(V))                         &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp CARET        &kp AMPERSAND  &kp ASTERISK
&kp LS(LG(N5))        &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp LG(V)      &trans      &trans     &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp HASH         &kp DOLLAR     &kp PERCENT
&mt LEFT_SHIFT N0     &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp LG(C)      &trans      &kp GRAVE  &kp EQUAL             &kp MINUS              &kp EXCLAMATION  &kp AT_SIGN    &kp NON_US_BACKSLASH
&trans                &trans        &trans        &trans        &trans         &trans      &trans     &trans                                                                       &trans
            >;
        };

        ARROW {
            bindings = <
&kp ESCAPE      &kp LC(LS(TAB))         &kp UP_ARROW    &kp LC(TAB)              &trans                       &kp LS(F6)  &trans  &trans  &kp LG(LS(O))  &trans
&kp HOME        &kp LEFT_ARROW          &kp DOWN_ARROW  &kp RIGHT_ARROW          &kp END  &trans      &trans  &trans      &trans  &trans  &kp LA(LG(L))  &trans
&kp LEFT_SHIFT  &kp LG(LS(LEFT_ARROW))  &trans          &kp LG(LS(RIGHT_ARROW))  &trans   &trans      &trans  &trans      &trans  &trans  &trans         &trans
&trans          &trans                  &trans          &trans                   &trans   &trans      &trans  &trans                                     &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &kp N7        &kp N8        &kp N9        &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &kp NUMBER_4  &kp N5        &kp NUMBER_6  &trans  &trans      &trans       &trans        &trans        &trans        &trans        &trans
&kp N0  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };
    };
};
